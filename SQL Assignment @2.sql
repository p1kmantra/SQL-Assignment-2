-- Active: 1700300664460@@127.0.0.1@3306
use mavenmovies;
-- Question 1: 
-- Retrieve the total number of rentals made in the Sakila database.
select count(rental_rate) from film;

-- Question 2: 
-- Find the average rental duration (in days) of movies rented from the Sakila database
select avg(rental_duration) from film;

-- Question 3: 
-- Display the first name and last name of customers in uppercase. 
select upper(concat(first_name," ",last_name)) from actor;

-- Question 4: 
-- Extract the month from the rental date and display it alongside the rental ID. 
select rental_id,MONTH(rental_date) from rental;

-- GROUP BY:
-- Question 5: 
-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 
select customer_id ,count(rental_id)as rentals from rental group by customer_id;

-- Question 6: 
-- Find the total revenue generated by each store.;
select customer_id ,sum(amount) from payment group by customer_id; 

-- Joins:
-- Question 7:
-- Display the title of the movie, customer's first name, and last name who rented it. 

select first_name,last_name,title from actor inner join
film_actor on actor.actor_id=film_actor.actor_id
inner join film on film.film_id=film_actor.film_id;

-- Question 8: 
-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 
select first_name,last_name,title from actor inner JOIN
film_actor on actor.actor_id=film_actor.actor_id inner JOIN
film on film.film_id=film_actor.film_id
where title="Gone with the wind";

-- GROUP BY: 
-- Question 1: 
-- Determine the total number of rentals for each category of movies. 

select count(rental_rate)as total_no_rentals,category_id as category_of_movies from film
inner join film_category on 
film.film_id=film_category.film_id group by category_of_movies;

 -- Question 2: 
-- Find the average rental rate of movies in each language. 

select avg(rental_rate) ,name  from film  left join
language on film.language_id=language.language_id 
group by name;

-- Joins:
-- Question 3: 
-- Retrieve the customer names along with the total amount they've spent on rentals. 

select concat(first_name," ",last_name) as name , sum(amount) as Total  from 
customer inner join payment on customer.customer_id=payment.
customer_id left join 
rental on payment.rental_id=rental.rental_id 
group by name;

-- Question 4: 
-- List the titles of movies rented by each customer in a particular city (e.g., 'London'). 
select first_name,last_name ,title,rental_rate, city  from customer 
left join address on customer.address_id=address.address_id
left join city on address.city_id=city.city_id
right join rental on city.last_update=rental.last_update
left join inventory on rental.inventory_id=inventory.inventory_id
inner join film on inventory.film_id=film.film_id
where city= "London";

-- Advanced Joins and GROUP BY: 
-- Question 5: 
-- Display the top 5 rented movies along with the number of times they've been rented. 

select title,count(rental_rate) as no_of_rented from film inner join
inventory on film.film_id=inventory.inventory_id
right join rental on inventory.inventory_id=rental.rental_id
group by title
order by no_of_rented desc LIMIT 5;

-- Question 6: 
-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).

select count(distinct(store_id)),concat(first_name," ",last_name) as name from customer
inner join inventory on rental.inventory_id=inventory.inventory_id
inner join customer on inventory.store_id=customer.store_id
group by name;

